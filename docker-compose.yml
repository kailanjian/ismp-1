version: '3'

services:
  db:
    image: postgres:12-alpine
    hostname: ismpdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "postgres"
  backend:
    image: richyen/ismp-backend
    build: ./backend
    links:
      - "db:ismpdb"
    volumes:
      - ./backend:/app/api
    ports:
      - "8000:8000"
    environment:
      # AWS settings
      USE_S3: "FALSE" # change this to true and populate the following fields to upload to s3.
      AWS_ACCESS_KEY_ID: "INSERT YOUR AWS ACCESS KEY ID HERE"
      AWS_SECRET_ACCESS_KEY: "INSERT YOUR AWS SECRET ACCESS KEY HERE"
      AWS_STORAGE_BUCKET_NAME: "INSERT THE NAME OF THE S3 BUCKET YOU CREATED HERE"
      # MailChimp Settings
      USE_MAILCHIMP: 'FALSE'
      MAILCHIMP_USERNAME: 'INSERT MAILCHIMP USERNAME HERE'
      MAILCHIMP_API_KEY: 'INSERT MAILCHIMP API KEY HERE'
      MAILCHIMP_LIST_ID: 'INSERT MAILCHIMP LIST ID HERE'
      # Hostname for when django is deployed. Leaving an empty string
      # will allow localhost and 127.0.0.1
      ALLOWED_HOST: ''
      # DB settings
      DB_DATABASE: 'postgres'
      DB_HOST: 'ismpdb'
      DB_PASSWORD: 'postgres'
      DB_PORT: '5432'
      DB_USER: 'postgres'
      DEBUG: 'TRUE'
      # this is not the key that will be used in production. Also please note
      # that in environment variables in docker-compose.yml, you have to
      # escape the $ character with another $ ($$).
      DJANGO_SECRET_KEY: "this_is_not_a_real_secret_key"
    depends_on:
      - db
    entrypoint:
      - "/app/api/api-entrypoint.sh"
  frontend:
    image: richyen/ismp-frontend
    build: ./frontend
    command: ["yarn", "start"]
    stdin_open: true
    tty: true
    environment:
      REACT_APP_API_HOST: "http://localhost:8000"
    volumes:
      - ./frontend:/app/frontend
      - node-modules:/app/frontend/node_modules
    ports:
      - "3000:3000"

volumes:
  node-modules:
